$(function() {
consoleInit(main)
  });

const RNBO_CHEF_ABI = [	{		"inputs": [			{				"internalType": "contract RNBZ",				"name": "_rnbztoken",				"type": "address"			},			{				"internalType": "uint256",				"name": "_startBlock",				"type": "uint256"			},			{				"internalType": "address",				"name": "_feeAddress",				"type": "address"			}		],		"stateMutability": "nonpayable",		"type": "constructor"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": true,				"internalType": "uint256",				"name": "pid",				"type": "uint256"			},			{				"indexed": false,				"internalType": "uint256",				"name": "amount",				"type": "uint256"			}		],		"name": "Deposit",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": true,				"internalType": "uint256",				"name": "pid",				"type": "uint256"			},			{				"indexed": false,				"internalType": "uint256",				"name": "amount",				"type": "uint256"			}		],		"name": "EmergencyWithdraw",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "previousOwner",				"type": "address"			},			{				"indexed": true,				"internalType": "address",				"name": "newOwner",				"type": "address"			}		],		"name": "OwnershipTransferred",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": true,				"internalType": "address",				"name": "newAddress",				"type": "address"			}		],		"name": "SetDevAddress",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": true,				"internalType": "address",				"name": "newAddress",				"type": "address"			}		],		"name": "SetFeeAddress",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": false,				"internalType": "uint256",				"name": "rnbzPerBlock",				"type": "uint256"			}		],		"name": "UpdateEmissionRate",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": true,				"internalType": "address",				"name": "user",				"type": "address"			},			{				"indexed": true,				"internalType": "uint256",				"name": "pid",				"type": "uint256"			},			{				"indexed": false,				"internalType": "uint256",				"name": "amount",				"type": "uint256"			}		],		"name": "Withdraw",		"type": "event"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_allocPoint",				"type": "uint256"			},			{				"internalType": "contract IERC20",				"name": "_lpToken",				"type": "address"			},			{				"internalType": "uint256",				"name": "_poolWithdrawFee",				"type": "uint256"			}		],		"name": "add",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_amount",				"type": "uint256"			}		],		"name": "deposit",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			}		],		"name": "emergencyWithdraw",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [],		"name": "feeAddress",		"outputs": [			{				"internalType": "address",				"name": "",				"type": "address"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "address",				"name": "_user",				"type": "address"			},			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			}		],		"name": "getActualWithdrawFeeRate",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_from",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_to",				"type": "uint256"			}		],		"name": "getMultiplier",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "pure",		"type": "function"	},	{		"inputs": [],		"name": "massUpdatePools",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [],		"name": "maxWithdrawFee",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [],		"name": "owner",		"outputs": [			{				"internalType": "address",				"name": "",				"type": "address"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			},			{				"internalType": "address",				"name": "_user",				"type": "address"			}		],		"name": "pendingRNBO",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "contract IERC20",				"name": "",				"type": "address"			}		],		"name": "poolExistence",		"outputs": [			{				"internalType": "bool",				"name": "",				"type": "bool"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"name": "poolInfo",		"outputs": [			{				"internalType": "contract IERC20",				"name": "lpToken",				"type": "address"			},			{				"internalType": "uint256",				"name": "allocPoint",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "lastRewardBlock",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "accRNBZPerShare",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "poolWithdrawFee",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [],		"name": "poolLength",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [],		"name": "renounceOwnership",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [],		"name": "rnbzPerBlock",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [],		"name": "rnbztoken",		"outputs": [			{				"internalType": "contract RNBZ",				"name": "",				"type": "address"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_allocPoint",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_poolWithdrawFee",				"type": "uint256"			}		],		"name": "set",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "address",				"name": "_feeAddress",				"type": "address"			}		],		"name": "setFeeAddress",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_fee",				"type": "uint256"			}		],		"name": "setMaxWithdrawFee",		"outputs": [			{				"internalType": "bool",				"name": "",				"type": "bool"			}		],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [],		"name": "startBlock",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [],		"name": "totalAllocPoint",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "address",				"name": "newOwner",				"type": "address"			}		],		"name": "transferOwnership",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_rnbzPerBlock",				"type": "uint256"			}		],		"name": "updateEmissionRate",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			}		],		"name": "updatePool",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_startBlock",				"type": "uint256"			}		],		"name": "updateStartBlock",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			},			{				"internalType": "address",				"name": "",				"type": "address"			}		],		"name": "userInfo",		"outputs": [			{				"internalType": "uint256",				"name": "amount",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "rewardDebt",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "lastDepositTimestamp",				"type": "uint256"			}		],		"stateMutability": "view",		"type": "function"	},	{		"inputs": [			{				"internalType": "uint256",				"name": "_pid",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_amount",				"type": "uint256"			}		],		"name": "withdraw",		"outputs": [],		"stateMutability": "nonpayable",		"type": "function"	}]

async function main() {
    const App = await init_ethers();

    _print(`Initialized ${App.YOUR_ADDRESS}\n`);
    _print("Reading smart contracts...\n");

   const RNBO_CHEF_ADDR = "0xDE6b77E0Ae277805135B4372c4A8Acc9A07ae0A2";
   const rewardTokenTicker = "RNBZ";
   const RNBO_CHEF = new ethers.Contract(RNBO_CHEF_ADDR, RNBO_CHEF_ABI, App.provider);

   const rewardsPerWeek = await RNBO_CHEF.rnbzPerBlock() /1e18
        * 604800 / 3;

    const tokens = {};
    const prices = await getBscPrices();

    await loadBscChefContract(App, tokens, prices, RNBO_CHEF, RNBO_CHEF_ADDR, RNBO_CHEF_ABI, rewardTokenTicker,
        "rnbztoken", null, rewardsPerWeek, "pendingRNBO", [1]);

    hideLoading();
  }
